{"version":3,"sources":["appbar.js","Style.js","Text.js","Search.js","CoinList.js","HighChartsConfig.js","Dashboard.js","HighChartsTheme.js","Button.js","App.js","serviceWorker.js","index.js"],"names":["Logo","styled","div","_templateObject","Controlbtn","_templateObject2","props","active","css","_templateObject3","Bar","_templateObject4","lightBlueBackground","concat","backgroundColor2","subtleBoxShadow","greenBoxShadow","WhiteText","h4","Text_templateObject","SearcnContainer","Search_templateObject","SearchInput","input","Search_templateObject2","Search","react_default","a","createElement","onKeyUp","this","filterCoins","CoinGrid","CoinList_templateObject","count","CoinList_templateObject2","CoinTile","CoinList_templateObject3","favorite","CoinList_templateObject4","dashboardFavorite","_templateObject5","chosen","_templateObject6","CoinHeaderGrid","_templateObject7","CoinSymbol","_templateObject8","DeleteIcon","_templateObject9","CoinList","_this","favorites","arguments","length","undefined","coinKeys","state","filteredCoins","Object","keys","coinList","slice","map","coinKey","isInFavorites","onClick","removeCoinFromFavorites","addCoinToFavorites","CoinName","Symbol","style","height","src","ImageUrl","HighChartsConfig","title","text","chart","subtitle","yAxis","xAxis","type","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","historical","responsive","rules","condition","maxWidth","chartOptions","ReactHighcharts","require","Highcharts","setOptions","lang","thousandsSep","colors","backgroundColor","borderColor","borderWidth","className","plotBackgroundColor","plotBorderWidth","color","font","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","navigation","buttonOptions","symbolStroke","hoverSymbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","select","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","legendBackgroundColor","background2","dataLabelsColor","textColor","maskColor","numberFormat","number","ChangePct","Dashboard_templateObject","red","Dashboard_templateObject2","TickerPrice","Dashboard_templateObject3","CoinTileCompact","extend","Dashboard_templateObject4","PaddingBlue","Dashboard_templateObject5","ChartGrid","Dashboard_templateObject6","ConfirmButton","Button_templateObject","cc","AppLayout","App_templateObject","Content","App_templateObject2","CenterDiv","App_templateObject3","MAX_FAVORITES","TIME_UNITS","checkFirstVisit","assetDash","JSON","parse","localStorage","getItem","currentFavorite","firstVisit","page","App","componentDidMount","fetchHistorical","fetchCoins","fetchPrices","_callee","regenerator_default","wrap","_context","prev","next","sent","Data","setState","console","log","Algorithm","stop","_callee2","results","_context2","name","data","ticker","index","moment","subtract","months","valueOf","USD","promises","units","push","priceHistorical","toDate","Promise","all","_callee3","prices","_context3","t0","error","forEach","sym","priceFull","displayingDashboard","displayingSetting","firstVisitMessage","confirmFavorites","setItem","stringify","settingsContent","call","assertThisInitialized","loadingContent","iWantANewLife","word","key","toConsumableArray","_","pull","includes","handleFilter","debounce","inputValue","coinSymbols","coinNames","allStringsToSearch","fuzzyResults","fuzzy","filter","result","string","pickBy","symKey","coinName","e","get","self","price","tileProps","objectSpread","CHANGEPCT24HOUR","PRICE","justifySelf","textAlign","display","margin","config","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"gyBAIA,IAAMA,EAAOC,IAAOC,IAAVC,KAIJC,EAAaH,IAAOC,IAAVG,IAEV,SAAAC,GAAK,OAAIA,EAAMC,QAAUC,YAAhBC,OAMTC,EAAMT,IAAOC,IAAVS,KCHF,IAAMC,EAAmB,qBAAAC,OATY,WAU/BC,EAAgB,qBAAAD,OATe,UASf,KAKhBE,GAJoB,qBAAAF,OATc,UASd,KAIL,+BAAAA,OAA2D,YAC1EG,EAAc,wIChBpB,IAAMC,EAAYhB,IAAOiB,GAAVC,IDwBS,sBAJN,oBANE,4YEb3B,IAAMC,EAAkBnB,IAAOC,IAAVmB,KAOfC,EAAcrB,IAAOsB,MAAVC,IACXV,EFYmB,oBEFVW,EAAA,WACX,OAAOC,EAAAC,EAAAC,cAACR,EAAD,KACHM,EAAAC,EAAAC,cAACX,EAAD,sBACCS,EAAAC,EAAAC,cAACN,EAAD,CAAaO,QAASC,KAAKC,y3CCpB7B,IAAMC,EAAW/B,IAAOC,IAAV+B,IAGf,SAAA3B,GAAK,OAAIA,EAAM4B,OAAS1B,YAAf2B,IACqB7B,EAAM4B,MAAQ,EAAI5B,EAAM4B,MAAQ,KAKvDE,EAAWnC,IAAOC,IAAVmC,IACftB,EACAH,EAIII,EAGJ,SAAAV,GAAK,OAAIA,EAAMgC,UAAY9B,YAAlB+B,IHHU,wCGUnB,SAAAjC,GAAK,OAAIA,EAAMkC,mBAAqBhC,YAA3BiC,IACLzB,IAMJ,SAAAV,GAAK,OAAIA,EAAMoC,SAAWpC,EAAMgC,UAAY9B,YAAnCmC,OAKFC,EAAiB3C,IAAOC,IAAV2C,KAKdC,EAAa7C,IAAOC,IAAV6C,KAGjBC,EAAa/C,IAAOC,IAAV+C,IAGVb,GAMSc,GAAA,WAAyB,IAAAC,EAAArB,KAAhBsB,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAChCG,EAAWJ,EACftB,KAAK2B,MAAML,UACLtB,KAAK2B,MAAMC,eAAiBC,OAAOC,KAAK9B,KAAK2B,MAAMC,gBAAmBC,OAAOC,KAAK9B,KAAK2B,MAAMI,UAAUC,MAAM,EAAE,KACrH,OAAOpC,EAAAC,EAAAC,cAACI,EAAD,CAAUE,MAAOkB,GAAatB,KAAK2B,MAAML,UAAUE,QACrDE,EAASO,IAAI,SAAAC,GAAO,OACjBtC,EAAAC,EAAAC,cAACQ,EAAD,CAAUM,OAAQS,EAAKc,cAAcD,GAAU1B,SAAUc,EAAWc,QAChEd,EAAY,WAAKD,EAAKgB,wBAAwBH,IAAY,WAAKb,EAAKiB,mBAAmBJ,KACvFtC,EAAAC,EAAAC,cAACgB,EAAD,KACIlB,EAAAC,EAAAC,cAAA,eAAOuB,EAAKM,MAAMI,SAASG,GAASK,UACnCjB,EAAY1B,EAAAC,EAAAC,cAACoB,EAAD,YAA+BtB,EAAAC,EAAAC,cAACkB,EAAD,SAAcK,EAAKM,MAAMI,SAASG,GAASM,SAE1F5C,EAAAC,EAAAC,cAAA,OAAK2C,MAAO,CAACC,OAAQ,QAASC,IAAG,4BAAA5D,OAA8BsC,EAAKM,MAAMI,SAASG,GAASU,iBCxE9FC,GAAA,WAEX,MAAO,CAEHC,MAAO,CACHC,KAAM,IAGVC,MAAO,CACHN,OAAQ,SAGZO,SAAU,CACNF,KAAM,IAGVG,MAAO,CACHJ,MAAO,CACHC,KAAM,UAIdI,MAAO,CAACC,KAAM,YACdC,OAAQ,CACJC,OAAQ,WACRC,MAAO,QACPC,cAAe,UAGnBC,YAAa,CACTC,OAAQ,CACJC,MAAO,CACHC,kBAAkB,GAEtBC,WAAY,OAIpBH,OAAQ1D,KAAK2B,MAAMmC,WAEnBC,WAAY,CACRC,MAAO,CAAC,CACJC,UAAW,CACPC,SAAU,KAEdC,aAAc,CACVd,OAAQ,CACJC,OAAQ,aACRC,MAAO,SACPC,cAAe,ovBC1CvC,IAAMY,GAAkBC,EAAQ,IAEhCD,GAAgBE,WAAWC,WCNf,CACNC,KAAM,CACJC,aAAc,KAEhBC,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF1B,MAAO,CACL2B,gBAAuC,UACvCC,YAAa,UACbC,YAAa,EACbC,UAAW,iBACXC,oBAA2C,UAC3CC,gBAAiB,GAEnBlC,MAAO,CACLL,MAAO,CACLwC,MAAO,UACPC,KAAM,kDAGVjC,SAAU,CACRR,MAAO,CACLwC,MAAO,UACPC,KAAM,kDAGV/B,MAAO,CACLgC,cAAe,UACfC,cAAe,EACfC,OAAQ,CACN5C,MAAO,CACLwC,MAAO,YAGXK,UAAW,UACXC,UAAW,UACXzC,MAAO,CACLL,MAAO,CACLwC,MAAO,OACPO,WAAY,OACZC,SAAU,OACVC,WAAY,uCAIlBxC,MAAO,CACLkC,cAAe,EACfD,cAAe,UACfE,OAAQ,CACN5C,MAAO,CACLwC,MAAO,YAGXK,UAAW,UACXK,kBAAmB,KACnBJ,UAAW,UACXK,UAAW,EACX9C,MAAO,CACLL,MAAO,CACLwC,MAAO,OACPO,WAAY,OACZC,SAAU,OACVC,WAAY,uCAIlBG,QAAS,CACPlB,gBAAiB,sBACjBlC,MAAO,CACLwC,MAAO,YAGXa,QAAS,CACPC,UAAW,CACTd,MAAO,WAGXxB,YAAa,CACXuC,KAAM,CACJC,WAAY,CACVhB,MAAO,QAETiB,OAAQ,CACNZ,UAAW,SAGfa,OAAQ,CACND,OAAQ,CACNZ,UAAW,SAGfc,QAAS,CACPF,OAAQ,CACNZ,UAAW,SAGfe,YAAa,CACXf,UAAW,UAGfjC,OAAQ,CACN0C,UAAW,CACTb,KAAM,wCACND,MAAO,WAETqB,eAAgB,CACdrB,MAAO,QAETsB,gBAAiB,CACftB,MAAO,SAGXuB,QAAS,CACP/D,MAAO,CACLwC,MAAO,SAGXI,OAAQ,CACN5C,MAAO,CACLwC,MAAO,SAIXwB,WAAY,CACVC,cAAe,CACbC,aAAc,UACdC,kBAAmB,UACnBC,MAAO,CACLC,KAAM,CACJC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CAAC,CAAC,GAAK,WAAY,CAAC,GAAK,aAElCC,OAAQ,aAMdC,cAAe,CACbC,YAAa,CACXT,KAAM,CACJC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CAAC,CAAC,GAAK,QAAS,CAAC,GAAK,UAE/BC,OAAQ,UACR5E,MAAO,CACLwC,MAAO,OACPO,WAAY,QAEdgC,OAAQ,CACNC,MAAO,CACLX,KAAM,CACJC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CAAC,CAAC,GAAK,QAAS,CAAC,GAAK,UAE/BC,OAAQ,UACR5E,MAAO,CACLwC,MAAO,UAGXyC,OAAQ,CACNZ,KAAM,CACJC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CAAC,CAAC,GAAK,QAAS,CAAC,GAAK,UAE/BC,OAAQ,UACR5E,MAAO,CACLwC,MAAO,aAKf0C,WAAY,CACVhD,gBAAiB,OACjBM,MAAO,UAET2C,WAAY,CACV3C,MAAO,WAIX4C,UAAW,CACTC,QAAS,CACPnD,gBAAiB,OACjBC,YAAa,QAEfmD,aAAc,OACdC,SAAU,wBACVtE,OAAQ,CACNuB,MAAO,UACPK,UAAW,YAIf2C,UAAW,CACTC,mBAAoB,CAClBnB,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CAAC,CAAC,GAAK,QAAS,CAAC,GAAK,UAE/Be,eAAgB,OAChBC,iBAAkB,OAClBC,sBAAuB,CACrBtB,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CAAC,CAAC,GAAK,QAAS,CAAC,GAAK,UAE/BkB,kBAAmB,OACnBC,WAAY,OACZC,qBAAsB,CACpBzB,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CAAC,CAAC,EAAG,QAAS,CAAC,EAAG,UAE3BqB,iBAAkB,QAIpBC,sBAAuB,qBACvBC,YAAa,kBACbC,gBAAiB,OACjBC,UAAW,UACXC,UAAW,0BD1NjB,IAAMC,GAAe,SAACC,GAClB,QAAUA,EAAS,IAAIhH,MAAM,EAAE,IAG7BiH,GAAY9K,IAAOC,IAAV8K,KAET,SAAA1K,GAAK,OAAIA,EAAM2K,KAAOzK,YAAb0K,QAKTC,GAAclL,IAAOC,IAAVkL,KLAU,kBKIrBC,GAAkBjJ,EAASkJ,OAAZC,KLDI,oBKSnBC,GAAcvL,IAAOC,IAAVuL,KACX1K,EACAH,GAKA8K,GAAYzL,IAAOC,IAAVyL,yQEvCR,IAAMC,GAAgB3L,IAAOC,IAAV2L,KPqBD,oBObf7K,0UCEV,IAAM8K,GAAK3F,EAAQ,IAEb4F,GAAY9L,IAAOC,IAAV8L,MAITC,GAAUhM,IAAOC,IAAVgM,MAGAC,GAAYlM,IAAOC,IAAVkM,MAMhBC,GAAgB,GAChBC,GAAa,GAEbC,GAAkB,WACtB,IAAIC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAChD,OAAIJ,EAOG,CACLpJ,UAFiCoJ,EAA9BpJ,UAGHyJ,gBAHiCL,EAAnBK,iBALP,CACLC,YAAY,EACZC,KAAM,aAmMGC,8MAtLbvJ,mBACEsJ,KAAM,YACN3J,UAAW,CAAC,MAAO,MAAO,MAAO,OAAQ,QACtCmJ,QAGLU,kBAAoB,WAClB9J,EAAK+J,kBACL/J,EAAKgK,aACLhK,EAAKiK,iBAIPD,gCAAa,SAAAE,IAAA,IAAAxJ,EAAA,OAAAyJ,EAAA3L,EAAA4L,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACW5B,GAAGjI,WADd,OACPA,EADO2J,EAAAG,KAC0BC,KACrCzK,EAAK0K,SAAS,CAAChK,aACfiK,QAAQC,IAAI,cAAclK,EAAQ,IAAQmK,WAC1CF,QAAQC,IAAI,uBAJD,wBAAAP,EAAAS,SAAAZ,EAAAvL,WAOboL,qCAAkB,SAAAgB,IAAA,IAAAC,EAAAvI,EAAA,OAAA0H,EAAA3L,EAAA4L,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,WACZvK,EAAKM,MAAMoJ,gBADC,CAAAuB,EAAAV,KAAA,eAAAU,EAAAV,KAAA,EAEMvK,EAAKyC,aAFX,OAEVuI,EAFUC,EAAAT,KAGV/H,EAAa,CAAC,CAChByI,KAAMlL,EAAKM,MAAMoJ,gBACjByB,KAAMH,EAAQpK,IAAI,SAACwK,EAAQC,GAAT,MAAmB,CAACC,OAASC,SAAS,CAACC,OAAOrC,GAAakC,IAAQI,UAAWL,EAAOM,SAEzG1L,EAAK0K,SAAS,CAACjI,eAPD,wBAAAwI,EAAAH,SAAAC,EAAApM,WAYlB8D,WAAa,WAEX,IADA,IAAIkJ,EAAW,GACPC,EAAQzC,GAAYyC,EAAM,EAAGA,IACnCD,EAASE,KAAKlD,GAAGmD,gBAAgB9L,EAAKM,MAAMoJ,gBAAiB,CAAC,OAAQ4B,OAASC,SAAS,CAACC,OAAQI,IAAQG,WAE3G,OAAOC,QAAQC,IAAIN,MAGrB1B,iCAAc,SAAAiC,IAAA,IAAAC,EAAA,OAAAhC,EAAA3L,EAAA4L,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA9B,KAAA,EAAA8B,EAAA7B,KAAA,EAGKvK,EAAKmM,SAHV,OAGVA,EAHUC,EAAA5B,KAAA4B,EAAA7B,KAAA,eAAA6B,EAAA9B,KAAA,EAAA8B,EAAAC,GAAAD,EAAA,SAKVpM,EAAK0K,SAAS,CAAC4B,OAAO,IALZ,OAOZtM,EAAK0K,SAAS,CAACyB,WAPH,yBAAAC,EAAAtB,SAAAoB,EAAAvN,KAAA,cAUdwN,OAAS,WACP,IAAIR,EAAW,GAIf,OAHA3L,EAAKM,MAAML,UAAUsM,QAAQ,SAAAC,GAC3Bb,EAASE,KAAKlD,GAAG8D,UAAUD,EAAI,UAE1BR,QAAQC,IAAIN,MAIrBe,oBAAsB,iBAA0B,cAApB1M,EAAKM,MAAMsJ,QACvC+C,kBAAoB,iBAA0B,aAApB3M,EAAKM,MAAMsJ,QAGrCgD,kBAAoB,WAClB,GAAG5M,EAAKM,MAAMqJ,WACZ,OAASpL,EAAAC,EAAAC,cAAA,mFAKboO,iBAAmB,WACjB,IAAInD,EAAkB1J,EAAKM,MAAML,UAAU,GAC3CD,EAAK0K,SAAS,CACZf,YAAY,EACZC,KAAM,YACNuC,OAAQ,KACRzC,kBACAjH,WAAY,MACX,WACDzC,EAAKiK,cACLjK,EAAK+J,oBAGPP,aAAasD,QAAQ,YAAaxD,KAAKyD,UAAU,CAC/C9M,UAAWD,EAAKM,MAAML,UACtByJ,wBAIJsD,gBAAkB,WAChB,OACEzO,EAAAC,EAAAC,cAAA,WACGuB,EAAK4M,oBACNrO,EAAAC,EAAAC,cAAA,WACGsB,GAASkN,KAATzM,OAAA0M,EAAA,EAAA1M,QAAA0M,EAAA,EAAA1M,CAAAR,KAAoB,GACrBzB,EAAAC,EAAAC,cAACuK,GAAD,KACAzK,EAAAC,EAAAC,cAACgK,GAAD,CAAe1H,QAASf,EAAK6M,kBAA7B,kCAICvO,EAAO2O,KAAPzM,OAAA0M,EAAA,EAAA1M,QAAA0M,EAAA,EAAA1M,CAAAR,KACAD,GAASkN,KAATzM,OAAA0M,EAAA,EAAA1M,QAAA0M,EAAA,EAAA1M,CAAAR,UAOTmN,eAAiB,WACf,OAAInN,EAAKM,MAAMI,SAKVV,EAAKM,MAAM6L,YAAhB,EACS5N,EAAAC,EAAAC,cAAA,+BALAF,EAAAC,EAAAC,cAAA,+BASX2O,cAAgB,SAACC,GACf1C,QAAQC,IAAI,iDAGd3J,mBAAqB,SAACqM,GACpB3C,QAAQC,IAAI,SAAU0C,GACtB,IAAIrN,EAASO,OAAA+M,EAAA,EAAA/M,CAAOR,EAAKM,MAAML,WAC3BA,EAAUE,OAAS+I,KACrBjJ,EAAU4L,KAAKyB,GACftN,EAAK0K,SAAS,CAACzK,kBAInBe,wBAA0B,SAACsM,GACzB3C,QAAQC,IAAI,WAAY0C,GACxB,IAAIrN,EAASO,OAAA+M,EAAA,EAAA/M,CAAOR,EAAKM,MAAML,WAC/BD,EAAK0K,SAAS,CAACzK,UAAUuN,IAAEC,KAAKxN,EAAWqN,QAG7CxM,cAAgB,SAACwM,GAAD,OAASE,IAAEE,SAAS1N,EAAKM,MAAML,UAAWqN,MAE1DK,aAAeH,IAAEI,SAAU,SAACC,GAC1B,IAAIC,EAActN,OAAOC,KAAKT,EAAKM,MAAMI,UACrCqN,EAAYD,EAAYlN,IAAI,SAAA4L,GAAG,OAAIxM,EAAKM,MAAMI,SAAS8L,GAAKtL,WAC5D8M,EAAqBF,EAAYpQ,OAAOqQ,GACxCE,EAAeC,KAAMC,OAAON,EAAYG,EAAoB,IAAIpN,IAAI,SAAAwN,GAAM,OAAIA,EAAOC,SACrF9N,EAAgBiN,IAAEc,OAAOtO,EAAKM,MAAMI,SAAU,SAAC0N,EAAQG,GACzD,IAAIC,EAAWJ,EAAOlN,SAEtB,OAAOsM,IAAEE,SAASO,EAAcM,IAAWf,IAAEE,SAASO,EAAcO,KAEtExO,EAAK0K,SAAS,CAACnK,mBACd,OAEH3B,YAAc,SAAC6P,GACb,IAAIZ,EAAYL,IAAEkB,IAAID,EAAG,gBACrBZ,EAMJ7N,EAAK2N,aAAaE,GALhB7N,EAAK0K,SAAS,CACZnK,cAAe,gFASnB,OAGAhC,EAAAC,EAAAC,cAACmK,GAAD,KTpMW,WAAY,IAAA5I,EAAArB,KACvB,OAAQJ,EAAAC,EAAAC,cAAClB,EAAD,KACRgB,EAAAC,EAAAC,cAAC5B,EAAD,kBAGA0B,EAAAC,EAAAC,cAAA,aAGCE,KAAK2B,MAAMqJ,YAAgBpL,EAAAC,EAAAC,cAACxB,EAAD,CAAY8D,QAAW,WAAKf,EAAK0K,SAAS,CAACd,KAAM,eAAgBxM,OAAQuB,KAAK+N,uBAA9E,aAG5BnO,EAAAC,EAAAC,cAACxB,EAAD,CAAY8D,QAAW,WAAKf,EAAK0K,SAAS,CAACd,KAAM,cAAexM,OAAQuB,KAAKgO,qBAA7E,cS2LUM,KAAKtO,MAEZA,KAAKwO,kBAAoB5O,EAAAC,EAAAC,cAACqK,GAAD,KACvBnK,KAAKgO,qBAAuBhO,KAAKqO,kBACjCrO,KAAK+N,uBH9KC,WACX,IAAIiC,EAAOhQ,KACX,MAAQ,CAACJ,EAAAC,EAAAC,cAACI,EAAD,KACJF,KAAK2B,MAAM6L,OAAOvL,IAAI,SAAUgO,EAAOvD,GACpC,IAAImB,EAAMhM,OAAOC,KAAKmO,GAAO,GACzBzD,EAAOyD,EAAMpC,GAAN,IAGPqC,EAAY,CACZxP,kBAAmBmN,IAAQmC,EAAKrO,MAAMoJ,gBACtC3I,QAAS,WACL4N,EAAKjE,SAAS,CAAChB,gBAAiB8C,EAAK/J,WAAa,MAAOkM,EAAK5E,iBAC9DP,aAAasD,QAAQ,YAAaxD,KAAKyD,UAALvM,OAAAsO,EAAA,EAAAtO,CAAA,GAC3B8I,KAAKC,MAAMC,aAAaC,QAAQ,cADL,CAE9BC,gBAAiB8C,QAM7B,OAAOnB,EAAQ,EAAI9M,EAAAC,EAAAC,cAACQ,EAAa4P,EAC5BtQ,EAAAC,EAAAC,cAACgB,EAAD,KACAlB,EAAAC,EAAAC,cAAA,eAAO+N,EAAP,KACAjO,EAAAC,EAAAC,cAACkB,EAAD,KACIpB,EAAAC,EAAAC,cAACmJ,GAAD,CAAWE,IAAKqD,EAAK4D,gBAAkB,GACvCrH,GAAayD,EAAK4D,iBADlB,OAKNxQ,EAAAC,EAAAC,cAACuJ,GAAD,UAAgBN,GAAayD,EAAK6D,OAAlC,MAEHzQ,EAAAC,EAAAC,cAACyJ,GAAoB2G,EACjBtQ,EAAAC,EAAAC,cAAA,OAAK2C,MAAO,CAAC6N,YAAa,SAA1B,IAAqCzC,EAArC,KACCjO,EAAAC,EAAAC,cAACkB,EAAD,KACIpB,EAAAC,EAAAC,cAACmJ,GAAD,CAAWE,IAAKqD,EAAK4D,gBAAkB,GACvCrH,GAAayD,EAAK4D,iBADlB,MAILxQ,EAAAC,EAAAC,cAAA,gBAAQiJ,GAAayD,EAAK6D,OAA1B,SAICzQ,EAAAC,EAAAC,cAAC8J,GAAD,KACThK,EAAAC,EAAAC,cAAC4J,GAAD,KAEI9J,EAAAC,EAAAC,cAAA,MAAI2C,MAAO,CAAC8N,UAAW,WAAYvQ,KAAK2B,MAAMI,SAAS/B,KAAK2B,MAAMoJ,iBAAiBxI,UACnF3C,EAAAC,EAAAC,cAAA,OAAK2C,MAAO,CAACC,OAAQ,QAAS8N,QAAS,QAASC,OAAO,QAAS9N,IAAG,4BAAA5D,OAA8BiB,KAAK2B,MAAMI,SAAS/B,KAAK2B,MAAMoJ,iBAAiBnI,aAErJhD,EAAAC,EAAAC,cAAC4J,GAAD,KACI1J,KAAK2B,MAAMmC,WAAalE,EAAAC,EAAAC,cAACsE,GAAD,CAAiBsM,OAAQ7N,GAAiByL,KAAKtO,OAA/C,KAA4EJ,EAAAC,EAAAC,cAAA,kDG6H/DwO,KAAKtO,eAjLpC2Q,aCrCEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOtR,EAAAC,EAAAC,cAACqR,GAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBxJ,WACrBA,UAAUyJ,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5088b1b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled,{css} from 'styled-components';\n\n// Navbar child logo element\nconst Logo = styled.div`\n    font-size: 1.5em;\n`\n// Navbar child Controlbtn element\nconst Controlbtn = styled.div`\n    cursor: pointer;\n    ${props => props.active && css`\n    text-shadow: 0px 0px 60px #03ff03;\n  `} \n`\n\n// Navbar parent element\nconst Bar = styled.div`\n  display: grid; \n  margin-bottom: 40px;\n  grid-template-columns: 180px auto 100px 100px;\n`\n// create the composed component\nexport default function () {\n    return (<Bar>\n    <Logo>\n      AssetDash\n    </Logo>\n    <div>\n    </div>\n    {/* add a click handler and define what state is */}\n   {!this.state.firstVisit && ( <Controlbtn onClick = {()=>{this.setState({page: 'dashboard'})}} active={this.displayingDashboard()}>\n      Dashboard\n    </Controlbtn>)}\n    <Controlbtn onClick = {()=>{this.setState({page: 'settings'})}} active={this.displayingSetting()}>\n      Settings\n    </Controlbtn>\n  </Bar>)\n}","const theme = 'dark';\n//const theme = 'light';\nexport const lightTheme = theme === 'light';\n\nexport const color = lightTheme ? 'white' : '#061a44';\nexport const color2 = lightTheme ? 'white': '#010e2c';\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\n\nif(lightTheme){\n\tdocument.body.style.background = '#e1eaee';\n\tdocument.body.style.color = '#061a44';\n}\n\nexport const lightBlueBackground = `background-color: ${color}`;\nexport const backgroundColor2 = `background-color: ${color2};`;\nexport const greenBackgroundColor = `background-color: ${color3};`;\n\nexport const fontColorGreen = `color: #03A9F4`;\nexport const fontColorWhite = `color: white`;\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\n\nexport const fontSizeBig = 'font-size: 2em';\nexport const fontSize1 = 'font-size: 1.5em;';\nexport const fontSize2 = 'font-size: 1.0em';\nexport const fontSize3 = 'font-size: .75em';\n\nexport const textAlignCenter = 'text-align: center;';\n","import { textAlignCenter, fontSize1, fontColorWhite } from \"./Style\";\nimport styled from 'styled-components';\n\n\nexport const WhiteText = styled.h4`\n    ${textAlignCenter}\n    ${fontSize1}\n    ${fontColorWhite}\n`","import React from 'react'\nimport styled from 'styled-components'\nimport {backgroundColor2, fontSize2} from './Style'\nimport {WhiteText} from './Text'\n\nconst SearcnContainer = styled.div`\n    margin-top: 40px;\n    display: grid;\n    grid-template-columns: 200px 1fr;\n    grid-gap: 20px;\n`\n\nconst SearchInput = styled.input`\n    ${backgroundColor2}\n    color: #1163c9\n    border: 1px solid;\n    ${fontSize2}\n    margin: 5px;\n    height: 25px;\n    place-self: center left;\n\n    `\n\nexport default function(){\n    return <SearcnContainer>\n        <WhiteText> Search all: </WhiteText>\n         <SearchInput onKeyUp={this.filterCoins}/>\n    </SearcnContainer>\n   \n\n}","import React, { Component } from 'react';\nimport styled,{css} from 'styled-components'\nimport {subtleBoxShadow,greenBoxShadow, redBoxShadow, lightBlueBackground} from './Style'\nimport _ from 'lodash'\n\n// create the css grid layout\nexport const CoinGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr  1fr;\n    ${props => props.count && css`\n    grid-template-columns: repeat(${props.count > 5 ? props.count : 5}, 1fr);\n    `}\n    grid-gap: 15px;\n    margin-top: 40px;\n`\nexport const CoinTile = styled.div`\n    ${subtleBoxShadow}\n    ${lightBlueBackground}\n    padding: 10px;\n    &:hover{\n        cursor: pointer;\n        ${greenBoxShadow}\n    }\n    \n    ${props => props.favorite && css`\n        &:hover{\n            cursor: pointer;\n            ${redBoxShadow}\n        }\n\n    `}\n    ${props => props.dashboardFavorite && css`\n        ${greenBoxShadow}\n\n        &:hover{\n            pointer-events: none;\n        }\n    `}\n    ${props => props.chosen && !props.favorite && css`\n        pointer-events: none;\n        opacity: 0.4;\n    `}\n`\nexport const CoinHeaderGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n`\nexport const CoinSymbol = styled.div`\n    justify-self: right;\n`\nconst DeleteIcon = styled.div`\n    justify-self: right;\n    display: none;\n    ${CoinTile}:hover & {\n        color: red;\n        display: block;\n    }\n`\n\nexport default function(favorites=false){\n    let coinKeys = favorites ? \n    this.state.favorites :\n        ((this.state.filteredCoins && Object.keys(this.state.filteredCoins)) || Object.keys(this.state.coinList).slice(0,100));\n    return <CoinGrid count={favorites && this.state.favorites.length}>\n        {coinKeys.map(coinKey =>\n            <CoinTile chosen={this.isInFavorites(coinKey)} favorite={favorites} onClick={\n                favorites ? ()=>{this.removeCoinFromFavorites(coinKey)} : ()=>{this.addCoinToFavorites(coinKey)}}>\n                <CoinHeaderGrid>\n                    <div> {this.state.coinList[coinKey].CoinName}</div>\n                   { favorites ? <DeleteIcon> X </DeleteIcon> : <CoinSymbol> {this.state.coinList[coinKey].Symbol}</CoinSymbol>} \n               </CoinHeaderGrid>\n                {<img style={{height: '50px'}} src={`http://cryptocompare.com/${this.state.coinList[coinKey].ImageUrl}`}/>}\n            </CoinTile>\n            )}     \n         </CoinGrid>\n\n        //  not going to load because of internet connection\n}","export default function (){\n\n    return {\n\n        title: {\n            text: ''\n        },\n\n        chart: {\n            height: '400px'\n        },\n    \n        subtitle: {\n            text: ''\n        },\n    \n        yAxis: {\n            title: {\n                text: 'Price'\n            }\n        },\n\n        xAxis: {type: 'datetime'},\n        legend: {\n            layout: 'vertical',\n            align: 'right',\n            verticalAlign: 'middle'\n        },\n    \n        plotOptions: {\n            series: {\n                label: {\n                    connectorAllowed: false\n                },\n                pointStart: 2010\n            }\n        },\n    \n        series: this.state.historical,\n    \n        responsive: {\n            rules: [{\n                condition: {\n                    maxWidth: 500\n                },\n                chartOptions: {\n                    legend: {\n                        layout: 'horizontal',\n                        align: 'center',\n                        verticalAlign: 'bottom'\n                    }\n                }\n            }]\n        }\n    \n    };\n}","import React from 'react';\nimport {CoinGrid, CoinTile, CoinHeaderGrid, CoinSymbol} from \"./CoinList\"\nimport styled, {css} from 'styled-components';\nimport {fontSizeBig, fontSize3, subtleBoxShadow, lightBlueBackground} from './Style';\nimport HighChartsConfig from './HighChartsConfig';\nimport theme from './HighChartsTheme';\n\nconst ReactHighcharts = require('react-highcharts')\n\nReactHighcharts.Highcharts.setOptions(theme())\n\n\nconst numberFormat = (number) => {\n    return + (number + '').slice(0,7);\n}\n\nconst ChangePct = styled.div`\n    color: green;\n    ${props => props.red && css`\n        color: red;\n    `}\n`\n\nconst TickerPrice = styled.div`\n    ${fontSizeBig}\n`\n\nconst CoinTileCompact = CoinTile.extend`\n    ${fontSize3}\n    display: grid;\n    grid-gap: 5px;\n    grid-template-columns: repeat(3, 1fr);\n\n`\n\nconst PaddingBlue = styled.div`\n    ${subtleBoxShadow}\n    ${lightBlueBackground}\n    padding: 5px;\n\n`\n\nconst ChartGrid = styled.div`\n    display: grid;\n    margin-top: 20px;   \n    grid-gap: 15px;\n    grid-template-columns: 1fr 3fr;\n\n`\n\nexport default function () {\n    let self = this;\n    return  [<CoinGrid> \n        {this.state.prices.map(function (price, index){\n            let sym = Object.keys(price)[0]\n            let data = price[sym]['USD']\n\n            // this will allow me to select a tile to be my current favorite\n            let tileProps = {\n                dashboardFavorite: sym === self.state.currentFavorite,\n                onClick: () => {\n                    self.setState({currentFavorite: sym, historical : null}, self.fetchHistorical);\n                    localStorage.setItem('assetDash', JSON.stringify({\n                        ...JSON.parse(localStorage.getItem('assetDash')),\n                        currentFavorite: sym\n                    }));    \n                }\n            }\n\n            // return inner grid components \n            return index < 5 ? <CoinTile {...tileProps}>\n                 <CoinHeaderGrid>\n                 <div> {sym} </div>\n                 <CoinSymbol>\n                     <ChangePct red={data.CHANGEPCT24HOUR < 0}> \n                    {numberFormat(data.CHANGEPCT24HOUR)}% \n                    </ChangePct> \n                </CoinSymbol>\n               </CoinHeaderGrid>\n               <TickerPrice> ${numberFormat(data.PRICE)} </TickerPrice>\n            </CoinTile> : (\n            <CoinTileCompact {...tileProps} >\n                <div style={{justifySelf: 'left'}}> {sym} </div>\n                 <CoinSymbol>\n                     <ChangePct red={data.CHANGEPCT24HOUR < 0}> \n                    {numberFormat(data.CHANGEPCT24HOUR)}% \n                    </ChangePct> \n                </CoinSymbol>\n                <div> ${numberFormat(data.PRICE)} </div>\n            </CoinTileCompact> \n            );\n        })}\n    </CoinGrid>, <ChartGrid>  \n        <PaddingBlue>\n            {/* I will put the news in this div for future reference */}\n            <h2 style={{textAlign: 'center'}}>{this.state.coinList[this.state.currentFavorite].CoinName}</h2>\n            <img style={{height: '200px', display: 'block', margin:'auto'}} src={`http://cryptocompare.com/${this.state.coinList[this.state.currentFavorite].ImageUrl}`}/>\n        </PaddingBlue>\n        <PaddingBlue>\n           {this.state.historical ? <ReactHighcharts config={HighChartsConfig.call(this)}> </ReactHighcharts> : <div>\n               Loading Historical Pricing Data\n           </div>}\n        </PaddingBlue>\n    </ChartGrid>]\n\n}","import {lightTheme} from './Style';\n\nexport default function(){\n    return  {\n      lang: {\n        thousandsSep: ','\n      },\n      colors: [\n        '#61d936',\n        '#552ccb',\n        '#1163c9',\n        '#04A1EE',\n        '#08C6E0',\n        '#146B9E',\n        '#F376C1',\n        '#1B2839'\n      ],\n      chart: {\n        backgroundColor: lightTheme ? 'white': '#061a44',\n        borderColor: '#000000',\n        borderWidth: 0,\n        className: 'dark-container',\n        plotBackgroundColor: lightTheme ? 'white': '#061a44',\n        plotBorderWidth: 0\n      },\n      title: {\n        style: {\n          color: '#C0C0C0',\n          font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n        }\n      },\n      subtitle: {\n        style: {\n          color: '#666666',\n          font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\n        }\n      },\n      xAxis: {\n        gridLineColor: '#333333',\n        gridLineWidth: 0,\n        labels: {\n          style: {\n            color: '#A0A0A0'\n          }\n        },\n        lineColor: '#A0A0A0',\n        tickColor: '#A0A0A0',\n        title: {\n          style: {\n            color: '#CCC',\n            fontWeight: 'bold',\n            fontSize: '12px',\n            fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n          }\n        }\n      },\n      yAxis: {\n        gridLineWidth: 0,\n        gridLineColor: '#333333',\n        labels: {\n          style: {\n            color: '#A0A0A0'\n          }\n        },\n        lineColor: '#A0A0A0',\n        minorTickInterval: null,\n        tickColor: '#A0A0A0',\n        tickWidth: 1,\n        title: {\n          style: {\n            color: '#CCC',\n            fontWeight: 'bold',\n            fontSize: '12px',\n            fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\n        style: {\n          color: '#F0F0F0'\n        }\n      },\n      toolbar: {\n        itemStyle: {\n          color: 'silver'\n        }\n      },\n      plotOptions: {\n        line: {\n          dataLabels: {\n            color: '#CCC'\n          },\n          marker: {\n            lineColor: '#333'\n          }\n        },\n        spline: {\n          marker: {\n            lineColor: '#333'\n          }\n        },\n        scatter: {\n          marker: {\n            lineColor: '#333'\n          }\n        },\n        candlestick: {\n          lineColor: 'white'\n        }\n      },\n      legend: {\n        itemStyle: {\n          font: '9pt Trebuchet MS, Verdana, sans-serif',\n          color: '#A0A0A0'\n        },\n        itemHoverStyle: {\n          color: '#FFF'\n        },\n        itemHiddenStyle: {\n          color: '#444'\n        }\n      },\n      credits: {\n        style: {\n          color: '#666'\n        }\n      },\n      labels: {\n        style: {\n          color: '#CCC'\n        }\n      },\n    \n      navigation: {\n        buttonOptions: {\n          symbolStroke: '#DDDDDD',\n          hoverSymbolStroke: '#FFFFFF',\n          theme: {\n            fill: {\n              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n              stops: [[0.4, '#606060'], [0.6, '#333333']]\n            },\n            stroke: '#000000'\n          }\n        }\n      },\n    \n      // scroll charts\n      rangeSelector: {\n        buttonTheme: {\n          fill: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [[0.4, '#888'], [0.6, '#555']]\n          },\n          stroke: '#000000',\n          style: {\n            color: '#CCC',\n            fontWeight: 'bold'\n          },\n          states: {\n            hover: {\n              fill: {\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                stops: [[0.4, '#BBB'], [0.6, '#888']]\n              },\n              stroke: '#000000',\n              style: {\n                color: 'white'\n              }\n            },\n            select: {\n              fill: {\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                stops: [[0.1, '#000'], [0.3, '#333']]\n              },\n              stroke: '#000000',\n              style: {\n                color: 'yellow'\n              }\n            }\n          }\n        },\n        inputStyle: {\n          backgroundColor: '#333',\n          color: 'silver'\n        },\n        labelStyle: {\n          color: 'silver'\n        }\n      },\n    \n      navigator: {\n        handles: {\n          backgroundColor: '#666',\n          borderColor: '#AAA'\n        },\n        outlineColor: '#CCC',\n        maskFill: 'rgba(16, 16, 16, 0.5)',\n        series: {\n          color: '#7798BF',\n          lineColor: '#A6C7ED'\n        }\n      },\n    \n      scrollbar: {\n        barBackgroundColor: {\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n          stops: [[0.4, '#888'], [0.6, '#555']]\n        },\n        barBorderColor: '#CCC',\n        buttonArrowColor: '#CCC',\n        buttonBackgroundColor: {\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n          stops: [[0.4, '#888'], [0.6, '#555']]\n        },\n        buttonBorderColor: '#CCC',\n        rifleColor: '#FFF',\n        trackBackgroundColor: {\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n          stops: [[0, '#000'], [1, '#333']]\n        },\n        trackBorderColor: '#666'\n      },\n    \n      // special colors for some of the\n      legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',\n      background2: 'rgb(35, 35, 70)',\n      dataLabelsColor: '#444',\n      textColor: '#C0C0C0',\n      maskColor: 'rgba(255,255,255,0.3)'\n    };\n}    ","import {fontSize1, greenBoxShadow, backgroundColor2, fontSize3} from './Style'\nimport styled, {css} from 'styled-components'\n\nexport const ConfirmButton = styled.div`\n    margin: 20px;\n    color: #1163c9;\n    ${fontSize1}\n    font-family: Exo 2, sans-serif;\n    color: #42ff3a;\n    padding: 5px;\n    &:hover{\n        ${greenBoxShadow}\n        cursor: pointer;\n    }\n`","import React, { Component } from 'react';\nimport './App.css';\nimport styled,{css} from 'styled-components'\nimport AppBar from './appbar.js'\nimport Search from './Search'\nimport Dashboard from './Dashboard'\nimport CoinList from './CoinList.js'\nimport {ConfirmButton} from './Button.js'\nimport fuzzy from 'fuzzy'\nimport _ from 'lodash'\nimport moment from 'moment';\n\n\nconst cc = require('cryptocompare')\n\nconst AppLayout = styled.div`\n  padding: 40px; \n`\n\nconst Content = styled.div` \n`\n\nexport const CenterDiv = styled.div`\n  display: grid;\n  justify-content: center;\n\n`\n\nconst MAX_FAVORITES = 10\nconst TIME_UNITS = 10\n\nconst checkFirstVisit = () => {\n  let assetDash = JSON.parse(localStorage.getItem('assetDash')) \n  if(!assetDash){\n    return {\n      firstVisit: true, \n      page: 'settings'\n    }\n  }\n  let {favorites, currentFavorite} = assetDash;\n  return {\n    favorites,\n    currentFavorite\n  }\n}\n\n// this is the parent component\nclass App extends Component {\n  // set state in this object which is refereence in the component render\n  state = {\n    page: 'dashboard',\n    favorites: ['ETH', 'BTC', 'XMR', 'DOGE', 'EOS'],\n    ...checkFirstVisit()  // study the uses of the spread\n  }\n\n  componentDidMount = () => {\n    this.fetchHistorical();\n    this.fetchCoins();\n    this.fetchPrices();\n    \n  }\n\n  fetchCoins = async () =>{\n    let coinList = (await cc.coinList()).Data;\n    this.setState({coinList});\n    console.log(\"The algo is\",coinList['BTC'].Algorithm)\n    console.log(\"Coin list is active\")\n  }\n\n  fetchHistorical = async () => {\n    if (this.state.currentFavorite){\n      let results = await this.historical();\n      let historical = [{\n        name: this.state.currentFavorite,\n        data: results.map((ticker, index) => [moment().subtract({months:TIME_UNITS - index}).valueOf(), ticker.USD])\n      }]\n      this.setState({historical});\n\n    }\n  }\n\n  historical = () => {\n    let promises = [];\n    for(let units = TIME_UNITS; units>0; units--){\n      promises.push(cc.priceHistorical(this.state.currentFavorite, ['USD'], moment().subtract({months: units}).toDate()))\n    }\n    return Promise.all(promises)\n  }\n\n  fetchPrices = async () => {\n    let prices;\n    try {\n      prices = await this.prices();\n    } catch(e){\n      this.setState({error: true});\n    }\n    this.setState({prices})\n  }\n\n  prices = () => {\n    let promises = [];\n    this.state.favorites.forEach(sym => {\n      promises.push(cc.priceFull(sym,'USD'))\n    });\n    return Promise.all(promises)\n  }\n\n  // define a helper functions to determine what state is active on the page\n  displayingDashboard = () => this.state.page === 'dashboard'\n  displayingSetting = () => this.state.page === 'settings'\n\n  // define a helper function to determine if this is the first visit\n  firstVisitMessage = () => {\n    if(this.state.firstVisit){\n      return ( <div>Welcome to AssetDash, please select your favorite coins to begin!</div>)\n    }\n  }\n\n  // define a helper function to establish local storage\n  confirmFavorites = ()=> {\n    let currentFavorite = this.state.favorites[0]\n    this.setState({\n      firstVisit: false,\n      page: 'dashboard',\n      prices: null,\n      currentFavorite,\n      historical: null\n    }, ()=>{\n      this.fetchPrices()\n      this.fetchHistorical()\n    })\n   \n    localStorage.setItem('assetDash', JSON.stringify({\n      favorites: this.state.favorites,\n      currentFavorite\n    }) );\n  }\n\n  settingsContent = () =>{\n    return (\n      <div>\n        {this.firstVisitMessage()}\n        <div>\n          {CoinList.call(this, true)}\n          <CenterDiv>\n          <ConfirmButton onClick={this.confirmFavorites}> \n              Saved the Coins you searched: \n           </ConfirmButton>\n          </CenterDiv>\n          {Search.call(this)}\n          {CoinList.call(this)}\n          \n        </div>\n      </div>\n    )\n  }\n\n  loadingContent = () => {\n    if(!this.state.coinList){\n      return <div>\n        Loading Coins\n      </div>\n    } \n    if (!this.state.prices){\n      return <div> Loading Prices </div>\n    }\n  }\n\n  iWantANewLife = (word) => {\n    console.log(\"I am not thrilled with what happening here\")\n  }\n\n  addCoinToFavorites = (key) => {\n    console.log('Adding', key)\n    let favorites = [...this.state.favorites];\n    if (favorites.length < MAX_FAVORITES){\n      favorites.push(key)\n      this.setState({favorites})\n    }\n  }\n\n  removeCoinFromFavorites = (key) => {\n    console.log('Removing', key)\n    let favorites = [...this.state.favorites];\n    this.setState({favorites:_.pull(favorites, key)}) //low dash call .pull()\n  }\n\n  isInFavorites = (key)=>  _.includes(this.state.favorites, key)\n\n  handleFilter = _.debounce( (inputValue) => {\n    let coinSymbols = Object.keys(this.state.coinList);\n    let coinNames = coinSymbols.map(sym => this.state.coinList[sym].CoinName);\n    let allStringsToSearch = coinSymbols.concat(coinNames);\n    let fuzzyResults = fuzzy.filter(inputValue, allStringsToSearch, {}).map(result => result.string);\n    let filteredCoins = _.pickBy(this.state.coinList, (result, symKey)=> {\n      let coinName = result.CoinName;\n      // if fuzzy results contains this symbol  or the coinName, include it (return true)\n      return _.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName)\n    })\n    this.setState({filteredCoins})\n  }, 500)\n\n  filterCoins = (e) => {\n    let inputValue= _.get(e, 'target.value' )\n    if(!inputValue){\n      this.setState({\n        filteredCoins: null\n      })\n      return;\n    }\n    this.handleFilter(inputValue)\n  }\n\n  render() {\n    // here are the child components\n    return (\n      // Parent component!!!\n      // below begins a JSX block\n    <AppLayout>\n      {/* make a call to the appBar component module  */}\n      {AppBar.call(this)}\n\n      {this.loadingContent() || <Content>\n        {this.displayingSetting() && this.settingsContent()}\n        {this.displayingDashboard() && Dashboard.call(this)}\n      </Content>}\n     </AppLayout>\n      );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}